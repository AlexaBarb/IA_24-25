'''
middle_motor.run(1000)
wait(2000)
middle_motor.stop()

i = 0
while i < 2:
    ev3.speaker.beep(200, 100)  # C
    wait(100)
    ev3.speaker.beep(200, 100)  # C
    wait(100)
    ev3.speaker.beep(200, 100)  # C
    wait(100)
    ev3.speaker.beep(300, 250)  # D
    wait(200)
    ev3.speaker.beep(400, 100)  # E
    wait(250)
    i = i + 1

# Parte final da música
wait(100)
ev3.speaker.beep(400, 200)  # F
wait(200)
ev3.speaker.beep(400, 100)  # F
wait(100)
ev3.speaker.beep(350, 100)  # D
wait(100)
ev3.speaker.beep(350, 100)  # D
wait(100)
ev3.speaker.beep(300, 100)  # D
wait(100)
ev3.speaker.beep(300, 100)  # D
wait(100)
ev3.speaker.beep(200, 150)  # G
#FAZER MOVIMENTO
left_motor.run_angle(1000,-900)
speed = 500
left_motor.run(speed)
right_motor.run(speed)
wait(5000)
left_motor.stop()
right_motor.stop()
left_motor.run_angle(1000,900)

#MOVER A GARRA
middle_motor.run(-1000)
wait(2000)
middle_motor.stop()
'''

# Lista que armazenará os símbolos associados às cores detetadas (por exemplo, "+", "*", etc.).
pecas = []
ev3 = EV3Brick() 

# Sensor de cor
sensorCor = ColorSensor(Port.S1) 
'''
# Deteta a cor passada no sensor de cores
def detetaCor():
    # Lê o valor da cor
    corDetetada = sensorCor.color()

    # Mapa de valores de cor para nomes de cor
    listaCores = {
        Color.BLUE: 'Azul',
        Color.GREEN: 'Verde',
        Color.YELLOW: 'Amarelo',
        Color.RED: 'Vermelho',
    }

    # Determina a cor detectada
    nomeCorDetetada = listaCores.get(corDetetada, 'Desconhecida')
    # Retorna o nome da cor detectada
    return nomeCorDetetada

leituraObjetos()
print(detetaCorPecas())

andar()
wait(2000)
rodar_direita()
wait(1000)
andar()
wait(1000)
rodar_esquerda()
'''